{"version":3,"sources":["../../node_modules/gun sync","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","gun","Gun","initialState","messages","reducer","state","message","App","useState","name","form","setForm","useReducer","dispatch","onChange","target","value","useEffect","get","map","on","m","createdAt","style","padding","placeholder","onClick","set","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,wICLnBC,EAAMC,MAENC,EAAe,CACjBC,SAAU,IAGd,SAASC,EAAQC,EAAOC,GACpB,MAAO,CACHH,SAAS,CAAEG,GAAH,mBAAeD,EAAMF,YAIrC,IAyDeI,EAzDH,WACR,MAAwBC,mBAAS,CAC7BC,KAAM,GACNH,QAAS,KAFb,mBAAOI,EAAP,KAAaC,EAAb,KAKA,EAA0BC,qBAAWR,EAASF,GAA9C,mBAAOG,EAAP,KAAcQ,EAAd,KACA,SAASC,EAAStB,GACdmB,EAAQ,2BAAKD,GAAN,kBAAalB,EAAEuB,OAAON,KAAOjB,EAAEuB,OAAOC,SAuBjD,OApBAC,qBAAU,WACWjB,EAAIkB,IAAI,YAChBC,MAAMC,IAAG,SAACC,GACfR,EAAS,CACLJ,KAAMY,EAAEZ,KACRH,QAASe,EAAEf,QACXgB,UAAWD,EAAEC,iBAGtB,IAYC,sBAAKC,MAAO,CAAEC,QAAS,IAAvB,UACI,uBACIV,SAAUA,EACVW,YAAY,OACZhB,KAAK,OACLO,MAAON,EAAKD,OAEhB,uBACIK,SAAUA,EACVW,YAAY,UACZhB,KAAK,UACLO,MAAON,EAAKJ,UAEhB,wBAAQoB,QAvBhB,WACqB1B,EAAIkB,IAAI,YAChBS,IAAI,CACTlB,KAAMC,EAAKD,KACXH,QAASI,EAAKJ,QACdgB,UAAWM,KAAKC,SAkBhB,0BACCxB,EAAMF,SAASgB,KAAI,SAACb,GAAD,OAChB,gCACI,6BAAKA,EAAQA,UACb,wCAAWA,EAAQG,QACnB,uCAAUH,EAAQgB,eAHZhB,EAAQgB,kBClDnBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.35e2bbcf.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 22;","import { useEffect, useState, useReducer } from \"react\";\nimport Gun from \"gun\";\n\nconst gun = Gun();\n\nconst initialState = {\n    messages: [],\n};\n\nfunction reducer(state, message) {\n    return {\n        messages: [message, ...state.messages],\n    };\n}\n\nconst App = () => {\n    const [form, setForm] = useState({\n        name: \"\",\n        message: \"\",\n    });\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    function onChange(e) {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    }\n\n    useEffect(() => {\n        const messages = gun.get(\"messages\");\n        messages.map().on((m) => {\n            dispatch({\n                name: m.name,\n                message: m.message,\n                createdAt: m.createdAt,\n            });\n        });\n    }, []);\n\n    function saveMessage() {\n        const messages = gun.get(\"messages\");\n        messages.set({\n            name: form.name,\n            message: form.message,\n            createdAt: Date.now(),\n        });\n    }\n\n    return (\n        <div style={{ padding: 30 }}>\n            <input\n                onChange={onChange}\n                placeholder=\"Name\"\n                name=\"name\"\n                value={form.name}\n            />\n            <input\n                onChange={onChange}\n                placeholder=\"Message\"\n                name=\"message\"\n                value={form.message}\n            />\n            <button onClick={saveMessage}>Send Message</button>\n            {state.messages.map((message) => (\n                <div key={message.createdAt}>\n                    <h2>{message.message}</h2>\n                    <h3>From: {message.name}</h3>\n                    <p>Date: {message.createdAt}</p>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}